from ursina import *
from object import *
from ursina.prefabs.first_person_controller import FirstPersonController

class map(Entity):
    def __init__(self, vis = True):
        super().__init__(self)
        v = vis
        self.platform = Entity(model='plane', texture="grass", collider='mesh', scale=(100, 1, 100),
                               position=(0, -20, 0), visible=v)

        for i in range(6):
            straight((-21.35 - 0.57 * i, -19, 10.405 - 0.111 * i), -101, 0.023)
            straight((-21.35 - 0.57 * i - 0.0505, -19, 10.405 - 0.111 * i + 0.284), -101, 0.023)

        for j in range(5, 9):  # 5 9
            straight((-21.35 - 0.57 * i - 0.0505, -19, 10.405 - 0.111 * i + 0.284), -101, 0.023)

        for i in range(-2, 15):  # -2 15
            sidewalk_Box((-21.35 - 0.57 * i * 0.35 - 0.255, -19.03, 10.405 - 0.111 * i * 0.35 - 1.174 + 0.878), -101)
            sidewalk_Box((-21.35 - 0.57 * i * 0.35 - 0.255 - 0.05, -19.03,
                          10.405 - 0.111 * i * 0.35 - 1.174 + 0.878 + 0.8 - 0.01), -101)
            fance((-21.35 - 0.57 * i * 0.35 - 0.255, -19.03, 10.405 - 0.111 * i * 0.35 - 1.174 + 0.878 + 0.0878),
                  -101 + 90)
            fance((-21.35 - 0.57 * i * 0.35 - 0.255 - 0.05, -19.03,
                   10.405 - 0.111 * i * 0.35 - 1.174 + 0.878 + 0.7 - 0.01), -101 + 90)

        for i in range(-11, -2):
            sidewalk_Box((-21.35 - 0.57 * i * 0.35 - 0.255 - 0.05, -19.03,
                          10.405 - 0.111 * i * 0.35 * 0.9 - 1.174 + 0.878 + 0.8 - 0.01), -101)
            fance((-21.35 - 0.57 * i * 0.35 - 0.255 - 0.05, -19.03,
                   10.405 - 0.111 * i * 0.35 * 0.9 - 1.174 + 0.878 + 0.7 - 0.01),
                  -101 + 90)

        for i in range(-1, 5):
            streetlamp((-21.35 - 0.57 * 2.2 * i * 0.35 - 0.255, -18.999,
                        10.405 - 0.111 * i * 2.2 * 0.35 - 1.174 + 0.878 + 0.0878), 78)

        # case1 세로 도로 및 인도
        for i in range(-3, 24):
            sidewalk_Box((-19.980 + 0.125 * i * 0.42 - 0.255 + 0.49, -19.03, 9.335 - 0.46 * i * 0.42), -15)
            sidewalk_Box((-19.980 + 0.125 * i * 0.42 - 0.255 + 0.49 - 0.65, -19.03, 9.335 - 0.46 * i * 0.42 - 0.13),
                         -15)


        road_nomal((-20.22, -19, 10))
        road_nomal((-20.15, -19, 9.6), -15)
        road_nomal((-20.1, -19, 9.2), -15)
        road_nomal((-19.9, -19, 8.7), -15)
        road_nomal((-19.8, -19, 8.3), -15)
        road_nomal((-20.19, -19, 10.45), 30)
        road_nomal((-20.15, -19, 10.48), 30)
        road_nomal((-20, -19, 10.48), 30)

        road_nomal((-18.7, -19, 11.05), 80, (0.7, 1, 0.7))
        road_nomal((-19.4, -19, 11), 80, (0.8, 1, 0.8))
        road_nomal((-20.19, -19, 10.9), 80, (0.7, 1, 0.7))
        road_nomal((-20.9, -19, 10.76), 80, (0.7, 1, 0.7))
        # 커브길
        sidewalk_Box((-19.92, -19.03, 10), 5)
        sidewalk_Box((-19.91, -19.03, 10.1), 15)
        sidewalk_Box((-19.90, -19.03, 10.2), 25)
        sidewalk_Box((-19.89, -19.03, 10.235), 27)
        sidewalk_Box((-19.88, -19.03, 10.240), 35)
        sidewalk_Box((-19.87, -19.03, 10.250), 40)
        sidewalk_Box((-19.85, -19.03, 10.260), 45)
        sidewalk_Box((-19.81, -19.03, 10.355), 45)
        sidewalk_Box((-19.76, -19.03, 10.385), 60)
        sidewalk_Box((-19.70, -19.03, 10.415), 60)
        sidewalk_Box((-19.70, -19.03, 10.455), 70)
        sidewalk_Box((-19.58, -19.03, 10.50), 80)

        # 커브길 이후 자리
        for i in range(8):
            sidewalk_Box((-19.379 + 0.201 * i, -19.03, 10.529 + 0.023 * i), 83)
            sidewalk_Box((-19.379 + 0.201 * i, -19.03, 10.529 + 0.023 * i + 0.78), 83)

        # sidewalk_Box((-19.379, -19.03, 10.529), 80)

        for i in range(-3, -2):
            sidewalk_Box((-21.35 - 0.57 * i * 0.35 - 0.255, -19.03, 10.405 - 0.111 * i * 0.35 - 1.174 + 0.878), -101)
            fance((-21.35 - 0.57 * i * 0.35 - 0.255, -19.03, 10.405 - 0.111 * i * 0.35 - 1.174 + 0.878 + 0.0878),
                  -101 + 90)

        road_nomal((-20.8, -19, 10.42), 30)
        road_nomal((-20.6, -19, 10.41), 30)
        road_nomal((-20.6, -19, 10.37), 30)
        road_nomal((-20.64, -19, 10.33), 30)
        ## 3차선
        long_none_straight((-20.78, -19, 10.515), -101, 0.023)
        long_none_straight((-20.21, -19, 10.627), -101, 0.023)
        long_none_straight((-19.645, -19, 10.726), -99, 0.023)

        r_short_straight((-19.31, -19, 10.78), -99, 0.023)
        r_short_straight((-19.225, -19, 10.79), -99, 0.022)

        sidewalk_Box((-20.6 , -19.03, 9.9 ), -15)
        sidewalk_Box((-20.65 , -19.03, 10 ), -25)
        sidewalk_Box((-20.7, -19.03, 10.1), -35)
        sidewalk_Box((-20.78, -19.03, 10.2), -45)
        sidewalk_Box((-20.85, -19.03, 10.22), -95)




        long_none_straight((-20.866, -19, 10.792), -101, 0.023)
        long_none_straight((-20.21 - 0.086, -19, 10.627 + 0.277), -101, 0.023)
        long_none_straight((-19.645 - 0.086, -19, 10.726 + 0.277), -99, 0.023)


        curb_line_1((-20.1, -18.93, 9.93))
        for i in range(0, 2):
            straight((-18.925 - 0.26 * i, -19, 10.8260 + 0.25 * i), -97, 0.021)
            straight((-18.925 - 0.26 * i, -19, 10.8260 + 0.25 * i), -97, 0.021)
            straight((-18.455 - 0.26 * i, -19, 10.877 + 0.25 * i), -95.2, 0.021)
            straight((-17.99 - 0.26 * i, -19, 10.915 + 0.25 * i), -94, 0.021)
            straight((-17.515 - 0.26 * i, -19, 10.9355 + 0.25 * i), -91, 0.021)
            straight((-17.04 - 0.26 * i, -19, 10.9355 + 0.25 * i), -89, 0.021)
            straight((-16.565 - 0.26 * i, -19, 10.9205 + 0.25 * i), -87, 0.021)
            straight((-16.09199 - 0.26 * i, -19, 10.8895 + 0.25 * i), -85.5, 0.021)
            straight((-15.6175 - 0.26 * i, -19, 10.8455 + 0.25 * i), -84, 0.021)
            straight((-15.6175 + 0.47205 - 0.26 * i, -19, 10.7855 + 0.25 * i), -81.5, 0.021)
            straight((-15.6175 + 0.47030 * 2 - 0.26 * i, -19, 10.7060 + 0.25 * i), -79.5, 0.021)
            straight((-15.6175 + 0.47000 * 3 - 0.26 * i, -19, 10.6150 + 0.25 * i), -78.5, 0.021)
            straight((-15.6179 + 0.47650 * 4 - 0.26 * i, -19, 10.5190 + 0.25 * i), -78.5, 0.021)
            straight((-15.6179 + 0.48050 * 5 - 0.26 * i, -19, 10.4200 + 0.25 * i), -78.5, 0.0215)
            straight((-15.6179 + 0.48950 * 6 - 0.26 * i, -19, 10.3100 + 0.25 * i), -78, 0.022)
            straight((-15.6179 + 0.49450 * 7 - 0.26 * i, -19, 10.2000 + 0.25 * i), -78, 0.0225)

        # case1_2

        straight((-9.100 - 0.56 * 12 - 0.016, -19, 9.570 + 0.13 * 11 - 0.12), -86, 0.023)
        straight((-9.100 - 0.56 * 11 - 0.008, -19, 9.570 + 0.12 * 11 - 0.06), -83, 0.023)
        straight((-9.100 - 0.56 * 10, -19, 9.570 + 0.12 * 10 - 0.03), -80, 0.023)
        straight((-9.100 - 0.56 * 9, -19, 9.570 + 0.12 * 9 - 0.015), -80, 0.023)
        straight((-9.100 - 0.56 * 8, -19, 9.570 + 0.12 * 8), -78, 0.023)
        straight((-9.100 - 0.56 * 7, -19, 9.570 + 0.12 * 7), -78, 0.023)
        straight((-9.100 - 0.56 * 6, -19, 9.570 + 0.12 * 6), -78, 0.023)
        straight((-9.100 - 0.56 * 5, -19, 9.570 + 0.12 * 5), -78, 0.023)
        straight((-9.100 - 0.56 * 4, -19, 9.570 + 0.12 * 4), -78, 0.023)
        straight((-9.100 - 0.56 * 3, -19, 9.570 + 0.12 * 3), -78, 0.023)
        straight((-9.100 - 0.56 * 2, -19.98, 9.570 + 0.12 * 2), -78, 0.023)
        straight((-9.100 - 0.56 * 1, -19.98, 9.570 + 0.12 * 1), -78, 0.023)

        # case2
        for i in range(0, 19):
            straight((-10.780 + 0.56 * i - 0.255, -19, 9.930 - 0.12 * i + 0.041), -78, 0.023)
            straight((-10.720 + 0.56 * i - 0.255, -19, 10.210 - 0.12 * i + 0.041), -78, 0.023)

        for i in range(-2, 53):
            sidewalk_Box((-10.780 + 0.56 * i * 0.35 - 0.255, -19.03, 10.85 - 0.1199 * i * 0.35 - 1.174 + 0.041), -78)
            sidewalk_Box(
                (-10.780 + 0.56 * (i + 1) * 0.35 - 0.255, -19.03, 10.85 - 0.1199 * (i + 1) * 0.35 - 0.3788 + 0.041),
                -78)
            fance((-10.780 + 0.56 * (i + 1) * 0.35 - 0.255, -18.999, 10.85 - 0.1199 * (i + 1) * 0.35 - 0.49 + 0.041),
                  -168)
            fance((-10.780 + 0.56 * (i) * 0.35 - 0.255, -18.999, 10.85 - 0.1199 * (i) * 0.35 - 1.07 + 0.041), -168)

        for i in range(-1, 10):
            streetlamp((-10.780 + 0.56 * (i) * 2 - 0.255, -18.999, 10.85 - 0.1199 * (i) * 2 - 1.07 + 0.041), 78)

        # 단위 m 임 , -11, 9.89483     -0.42, 8.64443    =   130.4164  1.56350016  = 131.97990016  = 11.488250526516 *50  = 574.4125263258m
        straight_v2((6 + 0 * 0.125 + 0.04, -19.98, 7.99 + 0 * 0.0413 + 0.015), 72, 0.0332)
        straight_v2((6 + 1 * 0.125 + 0.04, -19.98, 7.99 + 1 * 0.0413 + 0.015), 72, 0.0332)
        straight_v2((6 + 2 * 0.125 + 0.04, -19.98, 7.99 + 2 * 0.0413 + 0.015), 72, 0.0332)
        straight_v2((6 + 3 * 0.125 + 0.04, -19.98, 7.99 + 3 * 0.0413 + 0.015), 72, 0.0332)
        straight_v2((6 + 4 * 0.125 + 0.04, -19.98, 7.99 + 4 * 0.0413 + 0.015), 70, 0.0332)
        straight_v2((6 + 5 * 0.125 + 0.03, -19.98, 7.99 + 5 * 0.0413 + 0.015), 69, 0.0332)
        straight_v2((6 + 6 * 0.125, -19.98, 7.99 + 6 * 0.0413 + 0.01), 68, 0.0332)
        straight_v2((6 + 7 * 0.125 - 0.005, -19.98, 7.99 + 7 * 0.0413 + 0.018), 67, 0.0332)
        straight_v2((6 + 8 * 0.125 - 0.013, -19.98, 7.99 + 8 * 0.0413 + 0.030), 64, 0.0332)
        straight_v2((6 + 9 * 0.125 - 0.021, -19.98, 7.99 + 9 * 0.0413 + 0.048), 62, 0.0332)
        straight_v2((6 + 10 * 0.125 - 0.033, -19.98, 7.99 + 10 * 0.0413 + 0.068), 59, 0.0332)
        straight_v2((6 + 11 * 0.125 - 0.056, -19.98, 7.99 + 11 * 0.0413 + 0.092), 59, 0.0332)
        straight_v2((6 + 12 * 0.125 - 0.070, -19.98, 7.99 + 12 * 0.0413 + 0.12), 56, 0.0332)
        straight_v2((6 + 13 * 0.125 - 0.090, -19.98, 7.99 + 13 * 0.0413 + 0.152), 54, 0.0332)
        straight_v2((6 + 14 * 0.125 - 0.110, -19.98, 7.99 + 14 * 0.0413 + 0.186), 53, 0.0332)
        straight_v2((6 + 15 * 0.125 - 0.130, -19.98, 7.99 + 15 * 0.0413 + 0.220), 53, 0.0332)
        straight_v2((6 + 16 * 0.125 - 0.150, -19.98, 7.99 + 16 * 0.0413 + 0.258), 53, 0.0332)
        straight_v2((6 + 17 * 0.125 - 0.170, -19.98, 7.99 + 17 * 0.0413 + 0.295), 53, 0.0332)
        straight_v2((6 + 18 * 0.125 - 0.200, -19.98, 7.99 + 18 * 0.0413 + 0.329), 53, 0.0332)
        straight_v2((6 + 19 * 0.125 - 0.230, -19.98, 7.99 + 19 * 0.0413 + 0.361), 53, 0.0332)
        straight_v2((6 + 20 * 0.125 - 0.260, -19.98, 7.99 + 20 * 0.0413 + 0.393), 53, 0.0332)
        straight_v2((6 + 21 * 0.125 - 0.290, -19.98, 7.99 + 21 * 0.0413 + 0.425), 53, 0.0332)
        straight_v2((6 + 22 * 0.125 - 0.320, -19.98, 7.99 + 22 * 0.0413 + 0.455), 53, 0.0332)
        straight_v2((6 + 23 * 0.125 - 0.350, -19.98, 7.99 + 23 * 0.0413 + 0.481), 55, 0.0332)
        straight_v2((6 + 24 * 0.125 - 0.380, -19.98, 7.99 + 24 * 0.0413 + 0.513), 53.5, 0.0332)
        straight_v2((6 + 25 * 0.125 - 0.410, -19.98, 7.99 + 25 * 0.0413 + 0.537), 53.5, 0.0332)
        straight_v2((6 + 26 * 0.125 - 0.440, -19.98, 7.99 + 26 * 0.0413 + 0.565), 53.5, 0.0332)
        straight_v2((6 + 27 * 0.125 - 0.470, -19.98, 7.99 + 27 * 0.0413 + 0.590), 56, 0.0332)
        straight_v2((6 + 28 * 0.125 - 0.500, -19.98, 7.99 + 28 * 0.0413 + 0.613), 59, 0.0332)
        straight_v2((6 + 29 * 0.125 - 0.520, -19.98, 7.99 + 29 * 0.0413 + 0.636), 60, 0.0332)
        straight_v2((6 + 30 * 0.125 - 0.540, -19.98, 7.99 + 30 * 0.0413 + 0.652), 63, 0.0332)
        straight_v2((6 + 31 * 0.125 - 0.560, -19.98, 7.99 + 31 * 0.0413 + 0.661), 65, 0.0332)

        # 상단
        straight_v2((6 + 0 * 0.125 + 0.04 - 0.042, -19.98, 7.99 + 0 * 0.0413 + 0.015 + 0.124), 72, 0.0332)
        straight_v2((6 + 1 * 0.125 + 0.04 - 0.042, -19.98, 7.99 + 1 * 0.0413 + 0.015 + 0.124), 72, 0.0332)
        straight_v2((6 + 2 * 0.125 + 0.04 - 0.042, -19.98, 7.99 + 2 * 0.0413 + 0.015 + 0.124), 72, 0.0332)
        straight_v2((6 + 3 * 0.125 + 0.04 - 0.042, -19.98, 7.99 + 3 * 0.0413 + 0.015 + 0.124), 72, 0.0332)
        straight_v2((6 + 4 * 0.125 + 0.04 - 0.042, -19.98, 7.99 + 4 * 0.0413 + 0.015 + 0.124), 70, 0.0332)
        straight_v2((6 + 5 * 0.125 + 0.03 - 0.042, -19.98, 7.99 + 5 * 0.0413 + 0.015 + 0.124), 69, 0.0332)
        straight_v2((6 + 6 * 0.125 - 0.042, -19.98, 7.99 + 6 * 0.0413 + 0.01 + 0.124), 68, 0.0332)
        straight_v2((6 + 7 * 0.125 - 0.005 - 0.042, -19.98, 7.99 + 7 * 0.0413 + 0.018 + 0.124), 67, 0.0332)
        straight_v2((6 + 8 * 0.125 - 0.013 - 0.042, -19.98, 7.99 + 8 * 0.0413 + 0.030 + 0.124), 64, 0.0332)
        straight_v2((6 + 9 * 0.125 - 0.021 - 0.042, -19.98, 7.99 + 9 * 0.0413 + 0.048 + 0.124), 62, 0.0332)
        straight_v2((6 + 10 * 0.125 - 0.033 - 0.042, -19.98, 7.99 + 10 * 0.0413 + 0.068 + 0.124), 59, 0.0332)
        straight_v2((6 + 11 * 0.125 - 0.056 - 0.042, -19.98, 7.99 + 11 * 0.0413 + 0.092 + 0.124), 59, 0.0332)
        straight_v2((6 + 12 * 0.125 - 0.070 - 0.042, -19.98, 7.99 + 12 * 0.0413 + 0.12 + 0.124), 56, 0.0332)
        straight_v2((6 + 13 * 0.125 - 0.090 - 0.042, -19.98, 7.99 + 13 * 0.0413 + 0.152 + 0.124), 54, 0.0332)
        straight_v2((6 + 14 * 0.125 - 0.110 - 0.042, -19.98, 7.99 + 14 * 0.0413 + 0.186 + 0.124), 53, 0.0332)
        straight_v2((6 + 15 * 0.125 - 0.130 - 0.042, -19.98, 7.99 + 15 * 0.0413 + 0.220 + 0.124), 53, 0.0332)
        straight_v2((6 + 16 * 0.125 - 0.150 - 0.042, -19.98, 7.99 + 16 * 0.0413 + 0.258 + 0.124), 53, 0.0332)
        straight_v2((6 + 17 * 0.125 - 0.170 - 0.042, -19.98, 7.99 + 17 * 0.0413 + 0.295 + 0.124), 53, 0.0332)
        straight_v2((6 + 18 * 0.125 - 0.200 - 0.042, -19.98, 7.99 + 18 * 0.0413 + 0.329 + 0.124), 53, 0.0332)
        straight_v2((6 + 19 * 0.125 - 0.230 - 0.042, -19.98, 7.99 + 19 * 0.0413 + 0.361 + 0.124), 53, 0.0332)
        straight_v2((6 + 20 * 0.125 - 0.260 - 0.042, -19.98, 7.99 + 20 * 0.0413 + 0.393 + 0.124), 53, 0.0332)
        straight_v2((6 + 21 * 0.125 - 0.290 - 0.042, -19.98, 7.99 + 21 * 0.0413 + 0.425 + 0.124), 53, 0.0332)
        straight_v2((6 + 22 * 0.125 - 0.320 - 0.042, -19.98, 7.99 + 22 * 0.0413 + 0.455 + 0.124), 53, 0.0332)
        straight_v2((6 + 23 * 0.125 - 0.350 - 0.042, -19.98, 7.99 + 23 * 0.0413 + 0.481 + 0.124), 55, 0.0332)
        straight_v2((6 + 24 * 0.125 - 0.380 - 0.042, -19.98, 7.99 + 24 * 0.0413 + 0.513 + 0.124), 53.5, 0.0332)
        straight_v2((6 + 25 * 0.125 - 0.410 - 0.042, -19.98, 7.99 + 25 * 0.0413 + 0.537 + 0.124), 53.5, 0.0332)
        straight_v2((6 + 26 * 0.125 - 0.440 - 0.042, -19.98, 7.99 + 26 * 0.0413 + 0.565 + 0.124), 53.5, 0.0332)
        straight_v2((6 + 27 * 0.125 - 0.470 - 0.042, -19.98, 7.99 + 27 * 0.0413 + 0.590 + 0.124), 56, 0.0332)
        straight_v2((6 + 28 * 0.125 - 0.500 - 0.042, -19.98, 7.99 + 28 * 0.0413 + 0.613 + 0.124), 59, 0.0332)
        straight_v2((6 + 29 * 0.125 - 0.520 - 0.042, -19.98, 7.99 + 29 * 0.0413 + 0.636 + 0.124), 60, 0.0332)
        straight_v2((6 + 30 * 0.125 - 0.540 - 0.042, -19.98, 7.99 + 30 * 0.0413 + 0.652 + 0.124), 63, 0.0332)
        straight_v2((6 + 31 * 0.125 - 0.560 - 0.042, -19.98, 7.99 + 31 * 0.0413 + 0.661 + 0.124), 65, 0.0332)

        for i in range(34):
            sidewalk_Box((-0.069 - 0.0007 * i, -19.03, 0.37 - 0.1 * i), 91, 0.1)
            fance((-0.069 - 0.0007 * i + 0.048, -19.03, 0.37 - 0.1 * i), 91, 0.05)

        for i in range(13):
            sidewalk_Box((-0.069 - 0.0007 * i + 0.25, -19.03, 0.37 - 0.1 * i), 91, 0.1)
            sidewalk_Box((-0.069 - 0.0007 * (19 + i) + 0.25, -19.03, 0.37 - 0.1 * (19 + i)), 91, 0.1)
        sidewalk_Box((-0.1719 + 0.35, -19.03, 0.37 - 0.1 * 13 + 0.02), 85, 0.1)
        sidewalk_Box((-0.1719 + 0.35 + 0.02, -19.03, 0.37 - 0.1 * 13.4), 70, 0.1)
        sidewalk_Box((-0.1719 + 0.35 + 0.024, -19.03, 0.37 - 0.1 * 13.4), 60, 0.1)
        sidewalk_Box((-0.1719 + 0.35 + 0.029, -19.03, 0.37 - 0.1 * 13.6), 55, 0.1)
        sidewalk_Box((-0.1719 + 0.35 + 0.034, -19.03, 0.37 - 0.1 * 13.7), 50, 0.1)
        sidewalk_Box((-0.1719 + 0.35 + 0.039, -19.03, 0.37 - 0.1 * 13.8), 45, 0.1)
        sidewalk_Box((-0.1719 + 0.35 + 0.044, -19.03, 0.37 - 0.1 * 13.9), 40, 0.1)
        sidewalk_Box((-0.1719 + 0.35 + 0.062, -19.03, 0.37 - 0.1 * 14), 35, 0.1)
        sidewalk_Box((-0.1719 + 0.35 + 0.068, -19.03, 0.37 - 0.1 * 14.1), 35, 0.1)
        sidewalk_Box((-0.1719 + 0.35 + 0.076, -19.03, 0.37 - 0.1 * 14.1), 30, 0.1)
        sidewalk_Box((-0.1719 + 0.35 + 0.15, -19.03, 0.37 - 0.1 * 14.4), 10, 0.1)
        sidewalk_Box((-0.1719 + 0.35 + 0.23, -19.03, 0.37 - 0.1 * 14.5), 0, 0.1)

        sidewalk_Box((-0.1719 + 0.35 + 0.23, -19.03, 0.37 - 0.1 * 14.5 - 0.25), 0, 0.1)
        sidewalk_Box((-0.1719 + 0.35 + 0.2, -19.03, 0.37 - 0.1 * 14.5 - 0.25), 0, 0.1)
        sidewalk_Box((-0.1719 + 0.35 + 0.15, -19.03, 0.37 - 0.1 * 14.5 - 0.255), -10, 0.1)
        sidewalk_Box((-0.1719 + 0.35 + 0.1, -19.03, 0.37 - 0.1 * 14.5 - 0.27), -20, 0.1)
        sidewalk_Box((-0.1719 + 0.35 + 0.08, -19.03, 0.37 - 0.1 * 14.5 - 0.29), -35, 0.1)
        sidewalk_Box((-0.1719 + 0.35 + 0.03, -19.03, 0.37 - 0.1 * 14.5 - 0.32), -45, 0.1)
        sidewalk_Box((-0.1719 + 0.35, -19.03, 0.37 - 0.1 * 14.5 - 0.39), -75, 0.1)

        for i in range(13):
            sidewalk_Box((-0.1719 + 0.35 + 0.23 + 0.1 * i, -19.03, 0.37 - 0.1 * 14.5 + 0.0001 * i), 0, 0.1)
            sidewalk_Box((-0.1719 + 0.35 + 0.23 + 0.1 * i, -19.03, 0.37 - 0.1 * 14.5 + 0.0001 * i - 0.25), 0, 0.1)

        # road_nomal((0.05,-19,0),0,(0.2,1,0.2))
        for i in range(-3, 20):
            road_nomal((0.05, -19, 0 - 0.17 * i), 0, (0.2, 1, 0.2))

        road_nomal((1 - 0.17 * 5, -19, -1.2 + 0.1), 0, (0.2, 1, 0.2))
        road_nomal((1 - 0.17 * 5, -19, -1.2 - 0.1), 0, (0.2, 1, 0.2))
        for i in range(-3, 7):
            road_nomal((1 - 0.17 * i, -19, -1.2), 0, (0.2, 1, 0.2))
        caseE_line_point = []
        for i in range(44):
            caseE_line_point.append((0.05 - 0.0001 * i, -19, 1.3 - 0.03 * i))

        for i in range(57, 110):
            caseE_line_point.append((0.05 - 0.0001 * i, -19, 1.3 - 0.03 * i))

        for i in range(5, 26):
            caseE_line_point.append((0.057 + 0.05 * i, -19, -0.2 + 0.0008 * i))
        points = Entity(model=Mesh(vertices=caseE_line_point, mode='point', thickness=0.007), color=color.white,
                        z=-1.01)